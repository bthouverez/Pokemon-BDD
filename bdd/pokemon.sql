-- Pokemon Database
-- Base de données des pokemon de la première version
-- Utilisée à des fins pédagogiques

-- Bastien Thouverez

DROP TABLE IF EXISTS detientPokemon, stockePokemon, estType, evolueEn, dresseur, pokemon;

-- Structure de la table pokemon
-- Table de base
CREATE TABLE pokemon (
	id_pok SERIAL NOT NULL,
	nom_pok varchar(10) NOT NULL,
	PRIMARY KEY(id_pok)
);

-- Table evolueEn
-- Un pokémon peut évoluer en un autre pokémon à un certain niveau
-- lvl = -1 -> nécessite une pierre pour évoluer
-- lvl = -2 -> nécessite un échange pour évoluer
CREATE TABLE evolueEn (
	id_pok_base int NOT NULL,
	id_pok_evol int NOT NULL,
	lvl_evol_pok int NOT NULL,
	FOREIGN KEY(id_pok_base) REFERENCES pokemon(id_pok),
	FOREIGN KEY(id_pok_evol) REFERENCES pokemon(id_pok)
);

CREATE TABLE estType (
	id_pok int NOT NULL,
	type_pok varchar(25) NOT NULL,
	FOREIGN KEY(id_pok) REFERENCES pokemon(id_pok)
);
	
-- Structure de la table dresseur
CREATE TABLE dresseur (
	id_dress SERIAL NOT NULL,
	nom_dress varchar(25) NOT NULL,
	PRIMARY KEY(id_dress)
);


-- Table detientPokemon
-- Un dresseur détient au maximum 6 pokémons
-- arenes https://www.pokebip.com/page__jeuxvideo__rbvj__champions_arene.html
-- ligue https://www.pokebip.com/page__jeuxvideo__rbvj__conseil4.html
CREATE TABLE detientPokemon (
	id_dress int NOT NULL, 
	id_pok int NOT NULL,  
	lvl_pok int NOT NULL,
	FOREIGN KEY(id_dress) REFERENCES dresseur(id_dress),
	FOREIGN KEY(id_pok) REFERENCES pokemon(id_pok)
);


-- Table stockePokemon
-- Un dresseur possède des pokémons stockés dans le PC de Chen
CREATE TABLE stockePokemon (
	id_dress int NOT NULL, 
	id_pok int NOT NULL,  
	lvl_pok int NOT NULL,
	num_boite int NOT NULL,
	FOREIGN KEY(id_dress) REFERENCES dresseur(id_dress),
	FOREIGN KEY(id_pok) REFERENCES pokemon(id_pok)
);



--
-- DATA
--

-- http://www.g33kmania.com/liste-pokemon-generation-1/


INSERT INTO pokemon (id_pok, nom_pok) VALUES
(  1, 'Bulbizarre'),
(  2, 'Herbizarre'),
(  3, 'Florizarre'),
(  4, 'Salameche'),
(  5, 'Reptincel'),
(  6, 'Dracaufeu'),
(  7, 'Carapuce'),
(  8, 'Carabaffe'),
(  9, 'Tortank'),
( 10, 'Chenipan'),
( 11, 'Chrysacier'),
( 12, 'Papilusion'),
( 13, 'Aspicot'),
( 14, 'Coconfort'),
( 15, 'Dardargnan'),
( 16, 'Roucool'),
( 17, 'Roucoups'),
( 18, 'Roucarnage'),
( 19, 'Rattata'),
( 20, 'Rattatac'),
( 21, 'Piafabec'),
( 22, 'Rapasdepic'),
( 23, 'Abo'),
( 24, 'Arbok'),
( 25, 'Pikachu'),
( 26, 'Raichu'),
( 27, 'Sabelette'),
( 28, 'Sablaireau'),
-- ( 29, 'Nidoran♀'),
( 29, 'NidoranF'),
( 30, 'Nidorina'),
( 31, 'Nidoqueen'),
-- ( 32, 'Nidoran♂'),
( 32, 'NidoranM'),
( 33, 'Nidorino'),
( 34, 'Nidoking'),
( 35, 'Melofee'),
( 36, 'Melodelfe'),
( 37, 'Goupix'),
( 38, 'Feunard'),
( 39, 'Rondoudou'),
( 40, 'Grodoudou'),
( 41, 'Nosferapti'),
( 42, 'Nosferalto'),
( 43, 'Mystherbe'),
( 44, 'Ortide'),
( 45, 'Rafflesia'),
( 46, 'Paras'),
( 47, 'Parasect'),
( 48, 'Mimitoss'),
( 49, 'Aeromite'),
( 50, 'Taupiqueur'),
( 51, 'Triopikeur'),
( 52, 'Miaouss'),
( 53, 'Persian'),
( 54, 'Psykokwak'),
( 55, 'Akwakwak'),
( 56, 'Ferosinge'),
( 57, 'Colossinge'),
( 58, 'Caninos'),
( 59, 'Arcanin'),
( 60, 'Ptitard'),
( 61, 'Tetarte'),
( 62, 'Tartard'),
( 63, 'Abra'),
( 64, 'Kadabra'),
( 65, 'Alakazam'),
( 66, 'Machoc'),
( 67, 'Machopeur'),
( 68, 'Mackogneur'),
( 69, 'Chetiflor'),
( 70, 'Boustiflor'),
( 71, 'Empiflor'),
( 72, 'Tentacool'),
( 73, 'Tentacruel'),
( 74, 'Racaillou'),
( 75, 'Gravalanch'),
( 76, 'Grolem'),
( 77, 'Ponyta'),
( 78, 'Galopa'),
( 79, 'Ramoloss'),
( 80, 'Flagadoss'),
( 81, 'Magneti'),
( 82, 'Magneton'),
( 83, 'Canarticho'),
( 84, 'Doduo'),
( 85, 'Dodrio'),
( 86, 'Otaria'),
( 87, 'Lamantine'),
( 88, 'Tadmorv'),
( 89, 'Grotadmorv'),
( 90, 'Kokiyas'),
( 91, 'Crustabri'),
( 92, 'Fantominus'),
( 93, 'Spectrum'),
( 94, 'Ectoplasma'),
( 95, 'Onix'),
( 96, 'Soporifik'),
( 97, 'Hypnomade'),
( 98, 'Krabby'),
( 99, 'Krabboss'),
(100, 'Voltorbe'),
(101, 'Electrode'),
(102, 'Noeunoeuf'),
(103, 'Noadkoko'),
(104, 'Osselait'),
(105, 'Ossatueur'),
(106, 'Kicklee'),
(107, 'Tygnon'),
(108, 'Excelangue'),
(109, 'Smogo'),
(110, 'Smogogo'),
(111, 'Rhinocorne'),
(112, 'Rhinoferos'),
(113, 'Leveinard'),
(114, 'Saquedeneu'),
(115, 'Kangourex'),
(116, 'Hypotrempe'),
(117, 'Hypocean'),
(118, 'Poissirene'),
(119, 'Poissoroy'),
(120, 'Stari'),
(121, 'Staross'),
(122, 'M. Mime'),
(123, 'Insecateur'),
(124, 'Lippoutou'),
(125, 'Elektek'),
(126, 'Magmar'),
(127, 'Scarabrute'),
(128, 'Tauros'),
(129, 'Magicarpe'),
(130, 'Leviator'),
(131, 'Lokhlass'),
(132, 'Metamorph'),
(133, 'Evoli'),
(134, 'Aquali'),
(135, 'Voltali'),
(136, 'Pyroli'),
(137, 'Porygon'),
(138, 'Amonita'),
(139, 'Amonistar'),
(140, 'Kabuto'),
(141, 'Kabutops'),
(142, 'Ptera'),
(143, 'Ronflex'),
(144, 'Artikodin'),
(145, 'Electhor'),
(146, 'Sulfura'),
(147, 'Minidraco'),
(148, 'Draco'),
(149, 'Dracolosse'),
(150, 'Mewtwo'),
(151, 'Mew');

INSERT INTO estType (id_pok, type_pok) VALUES
(  1, 'Plante'),
(  1, 'Poison'),
(  2, 'Plante'),
(  2, 'Poison'),
(  3, 'Plante'),
(  3, 'Poison'),
(  4, 'Feu'),
(  5, 'Feu'),
(  6, 'Feu'),
(  6, 'Vol'),
(  7, 'Eau'),
(  8, 'Eau'),
(  9, 'Eau'),
( 10, 'Insecte'),
( 11, 'Insecte'),
( 12, 'Insecte'),
( 12, 'Vol'),
( 13, 'Insecte'),
( 13, 'Poison'),
( 14, 'Insecte'),
( 14, 'Poison'),
( 15, 'Insecte'),
( 15, 'Poison'),
( 16, 'Normal'),
( 16, 'Vol'),
( 17, 'Normal'),
( 17, 'Vol'),
( 18, 'Normal'),
( 18, 'Vol'),
( 19, 'Normal'),
( 20, 'Normal'),
( 21, 'Normal'),
( 21, 'Vol'),
( 22, 'Normal'),
( 22, 'Vol'),
( 23, 'Poison'),
( 24, 'Poison'),
( 25, 'Electrique'),
( 26, 'Electrique'),
( 27, 'Sol'),
( 28, 'Sol'),
( 29, 'Poison'),
( 30, 'Poison'),
( 31, 'Poison'),
( 31, 'Sol'),
( 32, 'Poison'),
( 33, 'Poison'),
( 34, 'Poison'),
( 34, 'Sol'),
( 35, 'Normal'),
( 36, 'Normal'),
( 37, 'Feu'),
( 38, 'Feu'),
( 39, 'Normal'),
( 40, 'Normal'),
( 41, 'Poison'),
( 41, 'Vol'),
( 42, 'Poison'),
( 42, 'Vol'),
( 43, 'Plante'),
( 43, 'Poison'),
( 44, 'Plante'),
( 44, 'Poison'),
( 45, 'Plante'),
( 45, 'Poison'),
( 46, 'Insecte'),
( 46, 'Plante'),
( 47, 'Insecte'),
( 47, 'Plante'),
( 48, 'Insecte'),
( 48, 'Poison'),
( 49, 'Insecte'),
( 49, 'Poison'),
( 50, 'Sol'),
( 51, 'Sol'),
( 52, 'Normal'),
( 53, 'Normal'),
( 54, 'Eau'),
( 55, 'Eau'),
( 56, 'Combat'),
( 57, 'Combat'),
( 58, 'Feu'),
( 59, 'Feu'),
( 60, 'Eau'),
( 61, 'Eau'),
( 62, 'Eau'),
( 62, 'Combat'),
( 63, 'Psy'),
( 64, 'Psy'),
( 65, 'Psy'),
( 66, 'Combat'),
( 67, 'Combat'),
( 68, 'Combat'),
( 69, 'Plante'),
( 69, 'Poison'),
( 70, 'Plante'),
( 70, 'Poison'),
( 71, 'Plante'),
( 71, 'Poison'),
( 72, 'Eau'),
( 72, 'Poison'),
( 73, 'Eau'),
( 73, 'Poison'),
( 74, 'Roche'),
( 74, 'Sol'),
( 75, 'Roche'),
( 75, 'Sol'),
( 76, 'Roche'),
( 76, 'Sol'),
( 77, 'Feu'),
( 78, 'Feu'),
( 79, 'Eau'),
( 79, 'Psy'),
( 80, 'Eau'),
( 80, 'Psy'),
( 81, 'Electrique'),
( 82, 'Electrique'),
( 83, 'Normal'),
( 83, 'Vol'),
( 84, 'Normal'),
( 84, 'Vol'),
( 85, 'Normal'),
( 85, 'Vol'),
( 86, 'Eau'),
( 87, 'Eau'),
( 87, 'Glace'),
( 88, 'Poison'),
( 89, 'Poison'),
( 90, 'Eau'),
( 91, 'Eau'),
( 91, 'Glace'),
( 92, 'Spectre'),
( 92, 'Poison'),
( 93, 'Spectre'),
( 93, 'Poison'),
( 94, 'Spectre'),
( 94, 'Poison'),
( 95, 'Roche'),
( 95, 'Sol'),
( 96, 'Psy'),
( 97, 'Psy'),
( 98, 'Eau'),
( 99, 'Eau'),
(100, 'Electrique'),
(101, 'Electrique'),
(102, 'Plante'),
(102, 'Psy'),
(103, 'Plante'),
(103, 'Psy'),
(104, 'Sol'),
(105, 'Sol'),
(106, 'Combat'),
(107, 'Combat'),
(108, 'Normal'),
(109, 'Poison'),
(110, 'Poison'),
(111, 'Sol'),
(111, 'Roche'),
(112, 'Sol'),
(112, 'Roche'),
(113, 'Normal'),
(114, 'Plante'),
(115, 'Normal'),
(116, 'Eau'),
(117, 'Eau'),
(118, 'Eau'),
(119, 'Eau'),
(120, 'Eau'),
(121, 'Eau'),
(121, 'Psy'),
(122, 'Psy'),
(123, 'Insecte'),
(123, 'Vol'),
(124, 'Glace'),
(124, 'Psy'),
(125, 'Electrique'),
(126, 'Feu'),
(127, 'Insecte'),
(128, 'Normal'),
(129, 'Eau'),
(130, 'Eau'),
(130, 'Vol'),
(131, 'Eau'),
(131, 'Glace'),
(132, 'Normal'),
(133, 'Normal'),
(134, 'Eau'),
(135, 'Electrique'),
(136, 'Feu'),
(137, 'Normal'),
(138, 'Roche'),
(138, 'Eau'),
(139, 'Roche'),
(139, 'Eau'),
(140, 'Roche'),
(140, 'Eau'),
(141, 'Roche'),
(141, 'Eau'),
(142, 'Roche'),
(142, 'Vol'),
(143, 'Normal'),
(144, 'Glace'),
(144, 'Vol'),
(145, 'Electrique'),
(145, 'Vol'),
(146, 'Feu'),
(146, 'Vol'),
(147, 'Dragon'),
(148, 'Dragon'),
(149, 'Dragon'),
(149, 'Vol'),
(150, 'Psy'),
(151, 'Psy');


INSERT INTO dresseur (id_dress, nom_dress) VALUES 
( 1, 'Zab'),
( 2, 'Pierre'),
( 3, 'Ondine'),
( 4, 'Major Bob'),
( 5, 'Erika'),
( 6, 'Koga'),
( 7, 'Morgane'),
( 8, 'Auguste'),
( 9, 'Giovanni'),
(10, 'Olga'),
(11, 'Aldo'),
(12, 'Agatha'),
(13, 'Peter');

INSERT INTO detientPokemon (id_dress, id_pok, lvl_pok) VALUES
-- Zab: M.Mime (62), Lippoutou (65), Arcanin (58), Rafflesia (61), Elektek (65), Hypocean (68)
(1, 122, 62),
(1, 124, 65),
(1,  59, 58),
(1,  45, 61),
(1, 125, 65),
(1, 117, 68),
-- Pierre: Raccaillou 12, Onix 14 
( 2, 74, 12),
( 2, 95, 14),
-- Ondine: Stari 18, Staross 21
( 3, 120, 18),
( 3, 121, 21),
-- Major Bob: Voltorbe 21, Pikachu 18, Raichu 24
( 4, 100, 21),
( 4, 25, 18),
( 4, 26, 24),
-- Erika: Empiflor 29, Saquedeneu 24, Rafflesia 29
( 5, 71, 29),
( 5, 114, 24),
( 5, 45, 29),
-- Koga: Smogo 37, Grotadmorv 39, Smogo 37, Smogogo 43
( 6, 109, 37),
( 6, 89, 39),
( 6, 109, 37),
( 6, 110, 43),
-- Morgane: Kadabra 38, M.  Mime 37, Aeromite 38, Alakazam 43
( 7, 64, 38),
( 7, 122, 37),
( 7, 49, 38),
( 7, 65, 43),
-- Auguste: Caninos 42, Ponyta 40, Galopa 42, Arcanin 47
( 8, 58, 42),
( 8, 77, 40),
( 8, 78, 42),
( 8, 59, 47),
-- Giovanni: Rhinocorne 45, Triopikeur 42, Nidoqueen 44, Nodiking 45, Rhinoferos 50
( 9, 111, 42),
( 9, 51, 42),
( 9, 31, 44),
( 9, 34, 45),
( 9, 112, 50),
-- Olga: Lamantine 54, Crustabri 53, Flagadoss 54, Lippoutou 56, Lokhlass 56
( 10, 87, 54),
( 10, 91, 53),
( 10, 80, 54),
( 10, 124, 56),
( 10, 131, 56),
-- Aldo: Onix 53, Tygnon 55, Kicklee 55, Onix 56, Mackogneur 58
( 11, 95, 53),
( 11, 107, 55),
( 11, 106, 55),
( 11, 95, 56),
( 11, 68, 58),
-- Agatha: Ectoplasma 56, Nosferalto 56, Spectrum 55, Arbok 58, Ectoplasma 60
( 12, 94, 56),
( 12, 42, 56),
( 12, 93, 55),
( 12, 24, 58),
( 12, 94, 60),
-- Peter: Leviator 58, Draco 56,  Draco 56, Ptera 60, Dracolosse 62
( 13, 130, 58),
( 13, 148, 56),
( 13, 148, 56),
( 13, 142, 60),
( 13, 149, 62); 

INSERT INTO stockePokemon (id_dress, id_pok, lvl_pok, num_boite) VALUES
(1, 16, 25, 1),
(1, 16, 5, 1),
(1, 16, 15, 1),
(1, 11, 10, 1),
(1, 16, 13, 1),
(1, 10, 5, 1),
(1, 19, 11, 1),
(1, 19, 13, 1),
(1, 16, 8, 1),
(1, 16, 17, 1),
(1, 19, 10, 1),
(1, 11, 11, 1),
(1, 16, 13, 1),

(1, 124, 42, 2),
(1, 117, 53, 2),
(1, 142, 50, 2),
(1, 143, 32, 2),
(1, 143, 59, 2),

(1, 133, 25, 3),
(1, 134, 48, 3),
(1, 135, 45, 3),
(1, 136, 42, 3),

(1, 150, 85, 5),
(1, 151, 98, 5);


-- evolutions
INSERT INTO evolueEn (id_pok_base, id_pok_evol, lvl_evol_pok) VALUES
-- http://www.pokepedia.fr/Liste_des_Pok%C3%A9mon_par_famille_d%27%C3%A9volution
(  1,   2, 16),
(  2,   3, 32),
(  4,   5, 16),
(  5,   6, 36),
(  7,   8, 16),
(  8,   9, 36),
( 10,  11, 7 ),
( 11,  12, 10),
( 13,  14, 7 ),
( 14,  15, 10),
( 16,  17, 18),
( 17,  18, 36),
( 19,  20, 20),
( 21,  22, 20),
( 23,  24, 22),
( 25,  26, -1),
( 27,  28, 22),
( 29,  30, 16),
( 30,  31, -1),
( 32,  33, 16),
( 33,  34, -1),
( 35,  36, -1),
( 37,  38, -1),
( 39,  40, -1),
( 41,  42, 22),
( 43,  44, 21),
( 44,  45, -1),
( 46,  47, 24),
( 48,  49, 31),
( 50,  51, 26),
( 52,  53, 28),
( 54,  55, 33),
( 56,  57, 28),
( 58,  59, -1),
( 60,  61, 25),
( 61,  62, -1),
( 63,  64, 16),
( 64,  65, -2),
( 66,  67, 28),
( 67,  68, -2),
( 69,  70, 21),
( 70,  71, -1),
( 72,  73, 30),
( 74,  75, 25),
( 75,  76, -2),
( 77,  78, 40),
( 79,  80, 37),
( 81,  82, 30),
( 84,  85, 31),
( 86,  87, 34),
( 88,  89, 38),
( 90,  91, -1),
( 92,  93, 25),
( 93,  94, -2),
( 96,  97, 26),
( 98,  99, 28),
(100, 101, 30),
(102, 103, -1),
(104, 105, 28),
(109, 110, 35),
(111, 112, 42),
(116, 117, 32),
(118, 119, 33),
(120, 121, -1),
(129, 130, 20),
(133, 134, -1),
(133, 135, -1),
(133, 136, -1),
(138, 139, 40),
(140, 141, 40),
(147, 148, 30),
(148, 149, 55);




-- Gestion de la carte du monde
-- Tous les élements de la carte sont regroupés dans une table afin qu'ils aient un id unique
-- Les élements de la map sont: des villes, des sites et des routes
-- Les routes ont l'id de leur numéro
-- CREATE TABLE mapElement (
-- 	'id_elem' SERIAL NOT NULL PRIMARY KEY
-- );
-- 
-- CREATE TABLE ville (
-- 	'id_ville' int NOT NULL, -- FK mapElement(id_elem)
-- 	'nom_ville' varchar(25) 
-- );
-- 
-- CREATE TABLE site (
-- 	'id_site' int NOT NULL, -- FK mapElement(id_elem)
-- 	'nom_site' varchar(25)
-- );
-- 
-- CREATE TABLE route (
-- 	'id_route' int NOT NULL, -- FK mapElement(id_elem)
-- 	'type_route' varchar(20) NOT NULL -- maritime ou terrestre
-- );
-- 
-- -- id_elem peut représenter une route ou un site:
-- --   Une route relie deux elements de la carte
-- --   Un site a une entrée et une sortie qui sont des éléments de map
-- CREATE TABLE liensMap (
-- 	'id_elem' int NOT NULL, -- FK route(id_route)
-- 	'id_elem_in' int NOT NULL, -- FK mapElement(id_elem)
-- 	'id_elem_out' int NOT NULL -- FK mapElement(id_elem)
-- );
